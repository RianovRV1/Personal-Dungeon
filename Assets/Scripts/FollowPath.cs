using System.Collections;
using System.Collections.Generic;
using UnityEngine;
/// <summary>
/// Follows a path generated by A_Star implementation.
/// </summary>
public class FollowPath : MonoBehaviour {
    Vector3[] followPath;
    public float drawSize = 0.5f;
    public MoveBlock2D target;
    Vector3 lateTarget;
    bool newPath = false;
    private int index = 0;
    public float speed = 10f;

    private void Update()
    {
        
        if(lateTarget != null && lateTarget != target.transform.position)
        {
            SetNull();
        }

    }
    private void LateUpdate()
    {
        if (!newPath)
        {
            SetNull();
            PathRequestManager.RequestPath(transform.position, target.transform.position, OnPathFound);
            target.hasMoved = false;
            newPath = true;
            lateTarget = target.transform.position;
        }
    }

    public void OnPathFound(Vector3[] newPath, bool pathFound)
    {
        if(pathFound)
        {
            followPath = newPath;
            StopCoroutine("FollowPathArray");
            StartCoroutine("FollowPathArray");
        }
    }

    IEnumerator FollowPathArray()
    {
        Vector3 currentWaypoint = followPath[0];
        while (true)
        {
            if(transform.position == currentWaypoint)
            {
                index++;
                if(index >= followPath.Length)
                {
                    yield break;
                }
                currentWaypoint = followPath[index];
            }
            transform.position = Vector3.MoveTowards(transform.position, currentWaypoint, speed * Time.deltaTime);
            yield return null;
        }
        
    }

    private void OnDrawGizmos()
    {
        if (followPath != null)
        {
            for (int i = index; i < followPath.Length; i++)
            {
                Gizmos.color = Color.green;
                Gizmos.DrawCube(followPath[i], new Vector3(drawSize, drawSize, drawSize));

                if (i == index)
                {
                    Gizmos.DrawLine(transform.position, followPath[i]);
                }
                else
                {
                    Gizmos.DrawLine(followPath[i - 1], followPath[i]);
                }

            }
        }
    }
    internal void SetNull()
    {
        StopCoroutine("FollowPathArray");
        followPath = null;
        index = 0;
        newPath = false;
    }
}
